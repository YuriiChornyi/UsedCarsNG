{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/manufacturer.ts","webpack:///./src/app/Models/manufacturerModels.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/manufacturer.service.ts","webpack:///./src/app/material-module.ts","webpack:///./src/app/new-advertisement/new-advertisement.component.css","webpack:///./src/app/new-advertisement/new-advertisement.component.html","webpack:///./src/app/new-advertisement/new-advertisement.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Manufacturer\r\n{\r\n    manufacturerId:number;\r\n    manufacturerName:string;\r\n}","import { Manufacturer } from 'src/app/Models/manufacturer';\r\n\r\nexport class ManufacturerModels\r\n{\r\n    carModelId: number;\r\n    carModelName: string;\r\n    manufacturer: Manufacturer\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewAdvertisementComponent } from './new-advertisement/new-advertisement.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'add-advertisement', component: NewAdvertisementComponent }\r\n  // ,{ path: 'advertisement/:id',      component: HeroDetailComponent },\r\n  // {\r\n  //   path: 'advertisements',\r\n  //   component: HeroListComponent,\r\n  //   data: { title: 'Heroes List' }\r\n  // },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7R0FDakI7O0VBRUQ7SUFDRSxlQUFlO0dBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1pY29uIHtcclxuICAgIHBhZGRpbmc6IDAgMTRweDtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtc3BhY2VyIHtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG4gIH0iXX0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span>Used Cars</span>\\r\\n    <a routerLink=\\\"/add-advertisement\\\" routerLinkActive=\\\"active\\\"><mat-icon class=\\\"example-icon\\\">time_to_leave</mat-icon></a>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <mat-icon class=\\\"example-icon\\\">person</mat-icon>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'UsedCars';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport { NewAdvertisementComponent } from './new-advertisement/new-advertisement.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule }    from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NewAdvertisementComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Manufacturer } from 'src/app/Models/manufacturer';\r\nimport { ManufacturerModels } from 'src/app/Models/manufacturerModels';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { strictEqual } from 'assert';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ManufacturerService {\r\n\r\n  constructor( private http: HttpClient) { }\r\n\r\n  private Url=\"https://localhost:5001\";\r\n\r\n  getManufacturers():Observable<Manufacturer[]>{\r\n    const getManufacturersUrl= this.Url+\"/Manufacturer/GetManufacturers\";\r\n    return this.http.get<Manufacturer[]>(getManufacturersUrl).pipe(catchError(this.handleError('getManufacturers',[])));\r\n  }\r\n\r\n  getManufacturerModels(manufacturerId:number):Observable<ManufacturerModels[]>{\r\n    const getManufacturerModelsUrl = this.Url+\"/Manufacturer/GetManufacturerModels/\";\r\n    console.log(manufacturerId);\r\n    let param = {\"manufacturerId\": manufacturerId.toString()};\r\n    return this.http.get<ManufacturerModels[]>(getManufacturerModelsUrl,{params:param}).pipe(catchError(this.handleError('getManufacturerModels',[])));\r\n  }\r\n\r\n\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n   \r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n   \r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n   \r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}","module.exports = \".example-card {\\r\\n    max-width: 100%;\\r\\n    margin-left: 8%;\\r\\n    margin-right: 8%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV3LWFkdmVydGlzZW1lbnQvbmV3LWFkdmVydGlzZW1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0dBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbmV3LWFkdmVydGlzZW1lbnQvbmV3LWFkdmVydGlzZW1lbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDglO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA4JTtcclxuICB9Il19 */\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n        <mat-card-title>New Advertisement</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n                  <mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\r\\n                    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n                      <ng-template matStepLabel>Choose your car manufacturer</ng-template>\\r\\n                      <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Car manufacturer\\\" [formControl]=\\\"manufacturerControl\\\">\\r\\n                          <mat-option>--</mat-option>\\r\\n                          <mat-option *ngFor=\\\"let manufacturer of manufacturersList  | async\\\" [value]=\\\"manufacturer\\\">\\r\\n                            {{manufacturer.manufacturerName}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                        <mat-error *ngIf=\\\"manufacturerControl.hasError('required')\\\">Please select a manufacturer</mat-error>\\r\\n                      </mat-form-field>\\r\\n                      <div>\\r\\n                        <button mat-button matStepperNext (click)=\\\"loadModels(manufacturerControl.value.manufacturerId, manufacturerControl.value.manufacturerName)\\\">Next</button>\\r\\n                      </div>\\r\\n                    </mat-step>\\r\\n                    <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n                        <ng-template matStepLabel>Choose your car model</ng-template>\\r\\n                        <mat-form-field>\\r\\n                          <mat-select placeholder=\\\"Car model\\\" [formControl]=\\\"modelControl\\\" required>\\r\\n                            <mat-option>--</mat-option>\\r\\n                            <mat-option *ngFor=\\\"let model of manufacturerModels  | async\\\" [value]=\\\"model\\\">\\r\\n                              {{model.carModelName}}\\r\\n                            </mat-option>\\r\\n                          </mat-select>\\r\\n                          <mat-error *ngIf=\\\"manufacturerControl.hasError('required')\\\">Please select a model</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <div>\\r\\n                          <button mat-button matStepperNext (click)=\\\"loadEngineType(modelControl.value.carModelId, modelControl.value.carModelName)\\\">Next</button>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n                    <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\r\\n                        <ng-template matStepLabel>Choose your car model</ng-template>\\r\\n                        <mat-form-field>\\r\\n                          <mat-select placeholder=\\\"Car model\\\" [formControl]=\\\"modelControl\\\" required>\\r\\n                            <mat-option>--</mat-option>\\r\\n                            <mat-option *ngFor=\\\"let model of manufacturerModels  | async\\\" [value]=\\\"model.carModelId\\\">\\r\\n                              {{model.carModelName}}\\r\\n                            </mat-option>\\r\\n                          </mat-select>\\r\\n                          <mat-error *ngIf=\\\"manufacturerControl.hasError('required')\\\">Please select a model</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <div>\\r\\n                          <button mat-button matStepperNext spellcheck=\\\"true\\\">Next</button>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n                    <mat-step>\\r\\n                      <ng-template matStepLabel>Done</ng-template>\\r\\n                      You are now done.\\r\\n                      <div>\\r\\n                        <button mat-button matStepperPrevious>Back</button>\\r\\n                        <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\r\\n                      </div>\\r\\n                    </mat-step>\\r\\n                  </mat-vertical-stepper>\\r\\n  </mat-card-content>\\r\\n</mat-card> \"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { ManufacturerService } from 'src/app/manufacturer.service';\r\nimport { Manufacturer } from 'src/app/Models/manufacturer';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ManufacturerModels } from 'src/app/Models/manufacturerModels';\r\n\r\n@Component({\r\n  selector: 'app-new-advertisement',\r\n  templateUrl: './new-advertisement.component.html',\r\n  styleUrls: ['./new-advertisement.component.css']\r\n})\r\nexport class NewAdvertisementComponent implements OnInit {\r\n  selectedManufacturer:Manufacturer=new Manufacturer();\r\n  selectedModel:ManufacturerModels=new ManufacturerModels();\r\n  selectedEngineType:number;\r\n\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  manufacturerControl:FormControl;\r\n  modelControl:FormControl;\r\n  manufacturersList:Observable<Manufacturer[]>;\r\n  manufacturerModels:Observable<ManufacturerModels[]>;\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder, private manufacturerService: ManufacturerService) {}\r\n  selectedValue: string;\r\n\r\n  ngOnInit() {\r\n    this.manufacturersList=this.manufacturerService.getManufacturers();\r\n    this.manufacturerControl = new FormControl('', [Validators.required]);\r\n    this.modelControl = new FormControl('', [Validators.required]);\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      manufacturerControl:this.manufacturerControl});\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      modelControl:this.modelControl})    \r\n  }\r\n\r\n  loadModels(manufacturerId:number, manufacturerName:string){\r\n    this.selectedManufacturer.manufacturerId = manufacturerId;\r\n    this.selectedManufacturer.manufacturerName = manufacturerName;\r\n    this.manufacturerModels = this.manufacturerService.getManufacturerModels(this.selectedManufacturer.manufacturerId);\r\n  }\r\n\r\n  loadEngineType(modelId:number, modelName:string){\r\n    this.selectedModel.carModelId = modelId;\r\n\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}